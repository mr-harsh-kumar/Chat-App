.navbar{
    background-color: 	rgb(24,24,24);   
}
.nav-link{
    font-size: 20px;
}
.bar1, .bar2, .bar3 {
    width: 35px;
    height: 5px;
    background-color: rgb(84, 223, 227);
    margin: 6px 0;
    transition: 0.4s;
  }
  
  .change .bar1 {
    transform: translate(0, 11px) rotate(-45deg);
  }
  
  .change .bar2 {opacity: 0;}
  
  .change .bar3 {
    transform: translate(0, -11px) rotate(45deg);
  }

  #my-links:hover{
    color: rgb(84, 223, 227);
    /* font-size: 80px; */
  }

#nav-links:hover{
    color: rgb(84, 223, 227);
    /* font-size: 80px; */
  }
    
.nav-item{
  color: rgb(84, 223, 227);

}

.navbar-nav{
  color: rgb(84, 223, 227);

}

/* Hover effect for nav links */
.nav-item .nav-link:hover {
  color: rgb(84, 223, 227);
}

/* If you want to add hover effect to the entire nav item, use this instead */
.nav-item:hover .nav-link {
  color: rgb(84, 223, 227);
}


/* const [hoveredLink, setHoveredLink] = useState(null);

const linkStyles = (isActive, isHovered) => ({
    color: isActive || isHovered ? 'rgb(84, 223, 227)' : 'white',
    transition: 'color 0.3s ease',
});
<Link 
                                className={`nav-link ${activeLink === '/about' ? 'active' : ''}`} 
                                onClick={() => handleLinkClick('/about')} 
                                to="/about"
                                style={linkStyles(activeLink === '/about', hoveredLink === '/about')}
                                onMouseEnter={() => setHoveredLink('/about')}
                                onMouseLeave={() => setHoveredLink(null)}
                            >
                                About
                            </Link> */
